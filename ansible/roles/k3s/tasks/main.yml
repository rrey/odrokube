---

- name: check that fact file exists
  stat:
    path: /etc/ansible/facts.d/k3s.fact
  register: k3s_facts

- block:
  - name: create directory for ansible custom facts
    file:
      state: directory
      recurse: yes
      path: /etc/ansible/facts.d

  - name: copy the default fact file
    template:
      src: k3s.fact.j2
      dest: /etc/ansible/facts.d/k3s.fact

  - name: re-read facts after adding custom fact
    setup:
      filter: ansible_local
  when: "not k3s_facts.stat.exists"

- name: create config directory
  file:
    state: directory
    path: /etc/rancher/k3s/

- stat:
    path: /usr/local/bin/k3s
  register: k3s

- name: Download binary
  get_url:
    url: "{{ k3s_github_url }}/releases/download/{{ k3s_version }}/k3s{{ k3s_arch }}"
    dest: /usr/local/bin/k3s
    force: yes
  when: "not k3s.stat.exists or ansible_local.k3s.meta.version != k3s_version"
  notify:
   - restart k3s

- name: Set permissions on binary
  file:
    path: /usr/local/bin/k3s
    owner: root
    group: root
    mode: "0755"

- name: Install systemd unit file
  template:
    src: k3s.service.j2
    dest: /etc/systemd/system/k3s.service
  notify: restart k3s

- name: Install the environment file
  template:
    src: environment.j2
    dest: /etc/rancher/k3s/environment
  notify: restart k3s

- name: enable k3s service
  systemd:
    name: k3s
    enabled: yes

- name: copy the default fact file
  template:
    src: k3s.fact.j2
    dest: /etc/ansible/facts.d/k3s.fact

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

...
